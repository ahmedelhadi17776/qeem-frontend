name: Security Scan

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]
  schedule:
    - cron: "0 2 * * 1" # Weekly on Monday at 2 AM

jobs:
  frontend-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Run npm audit
        run: |
          npm audit --json > npm-audit-report.json || true
          npm audit --audit-level=high || true
        continue-on-error: true

      - name: Run Snyk security scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }} # yamllint disable-line rule:truthy
        run: |
          npm install -g snyk
          if [ -n "$SNYK_TOKEN" ]; then
            snyk auth $SNYK_TOKEN
            snyk test --json > snyk-report.json || true
            snyk test || true
          else
            echo "Snyk token not provided, skipping scan"
          fi
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: frontend-security-reports
          path: |
            npm-audit-report.json
            snyk-report.json

  container-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build frontend image
        run: |
          docker build -t qeem-frontend:security-test .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "qeem-frontend:security-test"
          format: "sarif"
          output: "frontend-trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "frontend-trivy-results.sarif"

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog secrets scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, ISC
